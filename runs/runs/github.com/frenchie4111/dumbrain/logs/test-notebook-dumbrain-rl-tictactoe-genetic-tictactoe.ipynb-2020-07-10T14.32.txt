[I 200710 14:33:00 inrepo:36] Testing notebook dumbrain/rl/tictactoe-genetic/tictactoe.ipynb
[I 200710 14:33:00 inrepo:45] Found kernel python3
[I 200710 14:33:01 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 114, in <module>
    main()
  File "/src/inrepo.py", line 110, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 75, in run_notebook
    nb, cwd=os.path.dirname(nb_path), kernel_name=kernel_name, timeout=600
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
# Setting up the tic-tac-toe board/rules that we will use later

import random;
import sys;
import numpy as np;

def findWinner( board ):
    """
        Finds the winner of the board, returns 1, -1 for winner or 0 if no winner
    """
    winning_positions = [
        # horizontal
        [ 0, 1, 2 ], # < Heh, this is actually a 2d representation of the board
        [ 3, 4, 5 ],
        [ 6, 7, 8 ],
        # vertical
        [ 0, 3, 6 ],
        [ 1, 4, 7 ],
        [ 2, 5, 8 ],
        # diagonal
        [ 0, 4, 8 ],
        [ 2, 4, 6 ]
    ]
    for winning_position in winning_positions:
        if( board[ winning_position[ 0 ] ] == board[ winning_position[ 1 ] ] == board[ winning_position[ 2 ] ] != 0 ):
            return board[ winning_position[ 0 ] ]
    return 0

def printBoard( board ):
    """
        Prints out a board prettily. Note: calls findWinner
    """
    assert( len( board ) == 9 )
    for i, spot in enumerate( board ):
        if i != 0:
            if i % 3 == 0:
                sys.stdout.write( '\n--------------\n' )
            else: 
                sys.stdout.write( '|' )
        sys.stdout.write( str( spot ).center( 4, ' ' ) )
    sys.stdout.write( ' winner: ' + str( findWinner( board ) ) )
    sys.stdout.write( '\n' )

def generate():
    """
        Generates a set of random boards
    """
    current_player = random.choice( [ -1, 1 ] )
    board = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    boards = [ list( board ) ]
    moves = []
    positions = [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]

    for i in range( 9 ):
        move = positions.pop( random.randint( 0, len( positions ) - 1 ) )
        board[ move ] = current_player
        current_player *= -1
        moves.append( move )
        boards.append( list( board ) )
        winner = findWinner( board )
        if winner:
            return board, boards, moves, winner
    return board, boards, moves, 0
        
printBoard( [ 0, 1, -1, 0, -1, 0, 1, 1, 1 ] ) 

board, boards, moves, winner = generate()

printBoard( board )
print boards
print moves
------------------

[0;36m  File [0;32m"<ipython-input-1-2bbda6487662>"[0;36m, line [0;32m70[0m
[0;31m    print boards[0m
[0m               ^[0m
[0;31mSyntaxError[0m[0;31m:[0m Missing parentheses in call to 'print'. Did you mean print(boards)?

SyntaxError: Missing parentheses in call to 'print'. Did you mean print(boards)? (<ipython-input-1-2bbda6487662>, line 70)


Container exited with status: {'Error': None, 'StatusCode': 1}
