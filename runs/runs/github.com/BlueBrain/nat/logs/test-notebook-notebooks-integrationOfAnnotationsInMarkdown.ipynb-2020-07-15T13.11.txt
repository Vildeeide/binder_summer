[I 200715 13:13:19 inrepo:36] Testing notebook notebooks/integrationOfAnnotationsInMarkdown.ipynb
[W 200715 13:13:20 inrepo:48] No such kernel venv3.4, falling back on kernel language=python
[W 200715 13:13:20 inrepo:60] Using kernel python3 to provide language: python
[I 200715 13:13:20 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 114, in <module>
    main()
  File "/src/inrepo.py", line 110, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 75, in run_notebook
    nb, cwd=os.path.dirname(nb_path), kernel_name=kernel_name, timeout=600
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
import quantities as pq
import matplotlib.pyplot as plt
import collections

def getFigTrace(param, context=None, index=0):
    if context is None:
        fig, axes = plt.subplots()
    else:
        fig, axarr = context
        if isinstance(axarr, collections.Iterable):
            axes = axarr[index]
        else:
            axes = axarr
        
    axes.plot(param.indepValues[0], param.values, '-o')
    axes.set_xlim([-2.5, 32.5])
    axes.set_ylabel(param.name + " (" + param.unit + ")")
    axes.set_xlabel(param.indepNames[0] + " (" + param.indepUnits[0] + ")")
    return fig    


#### (Mooney and Miller, 2007) paper
f, axarr = plt.subplots(1, 2,  figsize=(10,4))

# Interpolate at P14 and express in mmÂ³ units
param = paramGetter.getParam("0ebdc338-6d38-11e6-b432-64006a4c56ef")
mooneyDensity = pq.Quantity(param.getInterp1dValues(14, "age"), param.unit).rescale('mm^-3')
figMooneyDensity = getFigTrace(param, (f, axarr), 0)

# Interpolate at P14
param = paramGetter.getParam("90c530b4-6e05-11e6-873d-64006a4c56ef")
mooneyVolume = pq.Quantity(param.getInterp1dValues(14, "age"), param.unit)
figMooneyVolume = getFigTrace(param, (f, axarr), 1)

f.savefig('mooneyStereology.png', bbox_inches='tight')


#### (Arcelli et al, 1997) paper
param = paramGetter.getParam("4330e61a-4d01-11e6-a223-64006a4c56ef")
arcelliDensity = pq.Quantity(param.values, param.unit)


#### (Cavdar et al, 2014)
cavdarPropInterLGN = paramGetter.getParam("22e29fd2-6ec3-11e6-8097-64006a4c56ef").valuesText(withUnit=True)
cavdarPropInterVPM = paramGetter.getParam("614cab12-6ecf-11e6-9428-64006a4c56ef").valuesText(withUnit=True)
cavdarPropInterVPL = paramGetter.getParam("8ca0b484-6ecf-11e6-9428-64006a4c56ef").valuesText(withUnit=True)

def rescale2DStereo(paramID, thicknessValue=1.0, thicknessUnit="um", desiredUnit="mm^-3"):
    density = paramGetter.getParam(paramID)
    thickness = pq.Quantity(thicknessValue, thicknessUnit)
    return (density/thickness).rescale(desiredUnit)

cavdarDensityInterLGN = rescale2DStereo("8f01bcb4-6ed4-11e6-9428-64006a4c56ef")
cavdarDensityInterVPM = rescale2DStereo("026c0650-6ed5-11e6-9428-64006a4c56ef")
cavdarDensityInterVPL = rescale2DStereo("d98090e8-6ed5-11e6-9428-64006a4c56ef")

cavdarDensityRelayLGN = rescale2DStereo("3d43a784-6ed4-11e6-9428-64006a4c56ef")
cavdarDensityRelayVPM = rescale2DStereo("c1651732-6ed4-11e6-9428-64006a4c56ef")
cavdarDensityRelayVPL = rescale2DStereo("8a58a41a-6ed5-11e6-9428-64006a4c56ef")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m<ipython-input-4-4568dcd25b99>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mimport[0m [0mquantities[0m [0;32mas[0m [0mpq[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mpyplot[0m [0;32mas[0m [0mplt[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0;32mimport[0m [0mcollections[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;32mdef[0m [0mgetFigTrace[0m[0;34m([0m[0mparam[0m[0;34m,[0m [0mcontext[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mindex[0m[0;34m=[0m[0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'matplotlib'
ModuleNotFoundError: No module named 'matplotlib'


Container exited with status: {'Error': None, 'StatusCode': 1}
