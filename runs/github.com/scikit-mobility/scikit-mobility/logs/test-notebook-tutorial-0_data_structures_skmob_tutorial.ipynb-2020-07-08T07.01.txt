[I 200708 07:04:14 inrepo:36] Testing notebook tutorial/0_data_structures_skmob_tutorial.ipynb
[W 200708 07:04:14 inrepo:48] No such kernel skmob, falling back on kernel language=python
[W 200708 07:04:14 inrepo:60] Using kernel python3 to provide language: python
[I 200708 07:04:15 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 112, in <module>
    main()
  File "/src/inrepo.py", line 108, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 74, in run_notebook
    exported = executenb(nb, cwd=os.path.dirname(nb_path), kernel_name=kernel_name)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
# TrajDataFrame can be converted into a sparse matrix of shape (len(tessellation), len(tessellation))
fdf.to_matrix()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m<ipython-input-32-52748a7b5564>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;31m# TrajDataFrame can be converted into a sparse matrix of shape (len(tessellation), len(tessellation))[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mfdf[0m[0;34m.[0m[0mto_matrix[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/skmob/core/flowdataframe.py[0m in [0;36mto_matrix[0;34m(self)[0m
[1;32m    251[0m             [0mmatrix[0m[0;34m[[0m[0mo[0m[0;34m][0m[0;34m[[0m[0md[0m[0;34m][0m [0;34m=[0m [0mdf[0m[0;34m[[0m[0;34m'flow'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    252[0m [0;34m[0m[0m
[0;32m--> 253[0;31m         [0mself[0m[0;34m.[0m[0mapply[0m[0;34m([0m[0m_to_matrix[0m[0;34m,[0m [0margs[0m[0;34m=[0m[0;34m([0m[0mm[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_tessellation[0m[0;34m)[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    254[0m [0;34m[0m[0m
[1;32m    255[0m         [0;32mreturn[0m [0mm[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/pandas/core/frame.py[0m in [0;36mapply[0;34m(self, func, axis, broadcast, raw, reduce, result_type, args, **kwds)[0m
[1;32m   6494[0m                          [0margs[0m[0;34m=[0m[0margs[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   6495[0m                          kwds=kwds)
[0;32m-> 6496[0;31m         [0;32mreturn[0m [0mop[0m[0;34m.[0m[0mget_result[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   6497[0m [0;34m[0m[0m
[1;32m   6498[0m     [0;32mdef[0m [0mapplymap[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mfunc[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/pandas/core/apply.py[0m in [0;36mget_result[0;34m(self)[0m
[1;32m    149[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mapply_raw[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    150[0m [0;34m[0m[0m
[0;32m--> 151[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mapply_standard[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    152[0m [0;34m[0m[0m
[1;32m    153[0m     [0;32mdef[0m [0mapply_empty_result[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/pandas/core/apply.py[0m in [0;36mapply_standard[0;34m(self)[0m
[1;32m    255[0m [0;34m[0m[0m
[1;32m    256[0m         [0;31m# compute the result using the series generator[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 257[0;31m         [0mself[0m[0;34m.[0m[0mapply_series_generator[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    258[0m [0;34m[0m[0m
[1;32m    259[0m         [0;31m# wrap results[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/pandas/core/apply.py[0m in [0;36mapply_series_generator[0;34m(self)[0m
[1;32m    284[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    285[0m                 [0;32mfor[0m [0mi[0m[0;34m,[0m [0mv[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mseries_gen[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 286[0;31m                     [0mresults[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mf[0m[0;34m([0m[0mv[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    287[0m                     [0mkeys[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mv[0m[0;34m.[0m[0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    288[0m             [0;32mexcept[0m [0mException[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/pandas/core/apply.py[0m in [0;36mf[0;34m(x)[0m
[1;32m     76[0m [0;34m[0m[0m
[1;32m     77[0m             [0;32mdef[0m [0mf[0m[0;34m([0m[0mx[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 78[0;31m                 [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0mx[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     79[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     80[0m             [0mf[0m [0;34m=[0m [0mfunc[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/skmob/core/flowdataframe.py[0m in [0;36m_to_matrix[0;34m(df, matrix, tessellation)[0m
[1;32m    246[0m [0;34m[0m[0m
[1;32m    247[0m         [0;32mdef[0m [0m_to_matrix[0m[0;34m([0m[0mdf[0m[0;34m,[0m [0mmatrix[0m[0;34m,[0m [0mtessellation[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 248[0;31m             [0mo[0m [0;34m=[0m [0mtessellation[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mtessellation[0m[0;34m[[0m[0;34m'tile_ID'[0m[0;34m][0m [0;34m==[0m [0mdf[0m[0;34m[[0m[0;34m'origin'[0m[0;34m][0m[0;34m][0m[0;34m.[0m[0miloc[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    249[0m             [0md[0m [0;34m=[0m [0mtessellation[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mtessellation[0m[0;34m[[0m[0;34m'tile_ID'[0m[0;34m][0m [0;34m==[0m [0mdf[0m[0;34m[[0m[0;34m'destination'[0m[0;34m][0m[0;34m][0m[0;34m.[0m[0miloc[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    250[0m [0;34m[0m[0m

[0;31mAttributeError[0m: ("'Int64Index' object has no attribute 'iloc'", 'occurred at index 0')
AttributeError: ("'Int64Index' object has no attribute 'iloc'", 'occurred at index 0')


Container exited with status: {'Error': None, 'StatusCode': 1}
