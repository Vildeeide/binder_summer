[I 200716 12:27:24 inrepo:36] Testing notebook Untitled1.ipynb
[I 200716 12:27:25 inrepo:45] Found kernel python3
[I 200716 12:27:25 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 114, in <module>
    main()
  File "/src/inrepo.py", line 110, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 75, in run_notebook
    nb, cwd=os.path.dirname(nb_path), kernel_name=kernel_name, timeout=600
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
import tensorflow as tf

tf.logging.set_verbosity(tf.logging.INFO)

def input_fn():
    data = [[[1, 0, 0, 0] for i in range(10)] for _ in range(100)]
    label = [[1] for i in range(100)]
    x = tf.constant(data, tf.float32)
    y_ = tf.constant(label, tf.float32)
    return x, y_

def model_fn(features, labels, mode):
    conv1 = tf.layers.conv1d(features, filters=20, kernel_size=3, padding="SAME")
    conv2 = tf.layers.conv1d(conv1, filters=100, kernel_size=3, padding="SAME")
    conv3 = tf.layers.conv1d(conv2, filters=50, kernel_size=3, padding="SAME")
    conv4 = tf.layers.conv1d(conv3, filters=40, kernel_size=3, padding="SAME")
    conv5 = tf.layers.conv1d(conv3, filters=10, kernel_size=3, padding="SAME")
    flat = tf.reshape(conv5, shape=[-1, 10*10])
    fc = tf.layers.dense(flat, 3)
    out = tf.layers.dense(fc, 1)

    global_step = tf.train.get_global_step()
    loss = tf.losses.sigmoid_cross_entropy(labels, out)
    tf.summary.scalar("loss", loss)
    train_op = tf.train.GradientDescentOptimizer(1e-2).minimize(loss, global_step)
    return tf.estimator.EstimatorSpec(mode=mode, loss=loss, train_op=train_op)


est = tf.estimator.Estimator(model_fn)
est.train(input_fn, steps=100)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m<ipython-input-1-777d42629f5e>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mimport[0m [0mtensorflow[0m [0;32mas[0m [0mtf[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;34m[0m[0m
[1;32m      3[0m [0mtf[0m[0;34m.[0m[0mlogging[0m[0;34m.[0m[0mset_verbosity[0m[0;34m([0m[0mtf[0m[0;34m.[0m[0mlogging[0m[0;34m.[0m[0mINFO[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;32mdef[0m [0minput_fn[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'tensorflow'
ModuleNotFoundError: No module named 'tensorflow'


Container exited with status: {'Error': None, 'StatusCode': 1}
