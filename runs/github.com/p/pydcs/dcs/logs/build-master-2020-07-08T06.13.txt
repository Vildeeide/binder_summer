Picked Local content provider.
Using local repo /tmp/r2d-test-2020-07-08T06.1354kxj4be/github.com/Pydcs/dcs.
Using PythonBuildPack builder
Step 1/50 : FROM buildpack-deps:bionic
 ---> 5d109dc6d8a0
Step 2/50 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 84875aa039ff
Step 3/50 : RUN apt-get -qq update &&     apt-get -qq install --yes --no-install-recommends locales > /dev/null &&     apt-get -qq purge &&     apt-get -qq clean &&     rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 2c6f3445209c
Step 4/50 : RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
 ---> Using cache
 ---> 5ac40a1069ef
Step 5/50 : ENV LC_ALL en_US.UTF-8
 ---> Using cache
 ---> 0569ecd6efb3
Step 6/50 : ENV LANG en_US.UTF-8
 ---> Using cache
 ---> bd3372a8f400
Step 7/50 : ENV LANGUAGE en_US.UTF-8
 ---> Using cache
 ---> ab87a637d837
Step 8/50 : ENV SHELL /bin/bash
 ---> Using cache
 ---> 50ed7363eaf5
Step 9/50 : ARG NB_USER
 ---> Using cache
 ---> 0b8893bd6422
Step 10/50 : ARG NB_UID
 ---> Using cache
 ---> b9e6fa4ea16e
Step 11/50 : ENV USER ${NB_USER}
 ---> Using cache
 ---> b142a4c01942
Step 12/50 : ENV HOME /home/${NB_USER}
 ---> Using cache
 ---> e11d5723ab90
Step 13/50 : RUN groupadd         --gid ${NB_UID}         ${NB_USER} &&     useradd         --comment "Default user"         --create-home         --gid ${NB_UID}         --no-log-init         --shell /bin/bash         --uid ${NB_UID}         ${NB_USER}
 ---> Using cache
 ---> e20a5903ae77
Step 14/50 : RUN wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key |  apt-key add - &&     DISTRO="bionic" &&     echo "deb https://deb.nodesource.com/node_10.x $DISTRO main" >> /etc/apt/sources.list.d/nodesource.list &&     echo "deb-src https://deb.nodesource.com/node_10.x $DISTRO main" >> /etc/apt/sources.list.d/nodesource.list
 ---> Using cache
 ---> 730bb79c819d
Step 15/50 : RUN apt-get -qq update &&     apt-get -qq install --yes --no-install-recommends        less        nodejs        unzip        > /dev/null &&     apt-get -qq purge &&     apt-get -qq clean &&     rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 2be5b9d2edc7
Step 16/50 : EXPOSE 8888
 ---> Using cache
 ---> 7fcdbaf0fe40
Step 17/50 : ENV APP_BASE /srv
 ---> Using cache
 ---> ee51ea8ec11a
Step 18/50 : ENV NPM_DIR ${APP_BASE}/npm
 ---> Using cache
 ---> f34fdbe18446
Step 19/50 : ENV NPM_CONFIG_GLOBALCONFIG ${NPM_DIR}/npmrc
 ---> Using cache
 ---> 833e25d9d235
Step 20/50 : ENV CONDA_DIR ${APP_BASE}/conda
 ---> Using cache
 ---> 8ee468f15616
Step 21/50 : ENV NB_PYTHON_PREFIX ${CONDA_DIR}/envs/notebook
 ---> Using cache
 ---> 971c9391c0ab
Step 22/50 : ENV KERNEL_PYTHON_PREFIX ${NB_PYTHON_PREFIX}
 ---> Using cache
 ---> 7fa50abe8e21
Step 23/50 : ENV PATH ${NB_PYTHON_PREFIX}/bin:${CONDA_DIR}/bin:${NPM_DIR}/bin:${PATH}
 ---> Using cache
 ---> eaa621b5d97f
Step 24/50 : COPY build_script_files/-2fusr-2flocal-2flib-2fpython3-2e8-2fdist-2dpackages-2frepo2docker-2fbuildpacks-2fconda-2factivate-2dconda-2esh-1be18e /etc/profile.d/activate-conda.sh
 ---> Using cache
 ---> 9ffab983afa0
Step 25/50 : COPY build_script_files/-2fusr-2flocal-2flib-2fpython3-2e8-2fdist-2dpackages-2frepo2docker-2fbuildpacks-2fconda-2fenvironment-2epy-2d3-2e7-2efrozen-2eyml-26bd38 /tmp/environment.yml
 ---> Using cache
 ---> 9b3e6c528ba6
Step 26/50 : COPY build_script_files/-2fusr-2flocal-2flib-2fpython3-2e8-2fdist-2dpackages-2frepo2docker-2fbuildpacks-2fconda-2finstall-2dminiconda-2ebash-813f10 /tmp/install-miniconda.bash
 ---> Using cache
 ---> e52d3b4016a9
Step 27/50 : RUN mkdir -p ${NPM_DIR} && chown -R ${NB_USER}:${NB_USER} ${NPM_DIR}
 ---> Using cache
 ---> 0a8f7bcc0bd7
Step 28/50 : USER ${NB_USER}
 ---> Using cache
 ---> e295fca18e9d
Step 29/50 : RUN npm config --global set prefix ${NPM_DIR}
 ---> Using cache
 ---> b3629329dd8f
Step 30/50 : USER root
 ---> Using cache
 ---> 5ba3698f0957
Step 31/50 : RUN bash /tmp/install-miniconda.bash && rm /tmp/install-miniconda.bash /tmp/environment.yml
 ---> Using cache
 ---> ecb18ec9bb2f
Step 32/50 : ARG REPO_DIR=${HOME}
 ---> Using cache
 ---> 8f78500beba3
Step 33/50 : ENV REPO_DIR ${REPO_DIR}
 ---> Using cache
 ---> 300bfe3eb940
Step 34/50 : WORKDIR ${REPO_DIR}
 ---> Using cache
 ---> ab56d4c94aaf
Step 35/50 : ENV PATH ${HOME}/.local/bin:${REPO_DIR}/.local/bin:${PATH}
 ---> Using cache
 ---> 26a826700420
Step 36/50 : ENV CONDA_DEFAULT_ENV ${KERNEL_PYTHON_PREFIX}
 ---> Using cache
 ---> ebb7f28a23e9
Step 37/50 : COPY src/requirements.txt ${REPO_DIR}/requirements.txt
 ---> Using cache
 ---> a1a020179a72
Step 38/50 : USER root
 ---> Using cache
 ---> 3ab9067e434a
Step 39/50 : COPY src/ ${REPO_DIR}
 ---> c30b07e85f09
Step 40/50 : RUN chown -R ${NB_USER}:${NB_USER} ${REPO_DIR}
 ---> Running in 536b4367a077
Removing intermediate container 536b4367a077
 ---> 540598ae29a1
Step 41/50 : USER ${NB_USER}
 ---> Running in a8333da1edb0
Removing intermediate container a8333da1edb0
 ---> ebff3694e6a9
Step 42/50 : RUN ${KERNEL_PYTHON_PREFIX}/bin/pip install --no-cache-dir -r "requirements.txt"
 ---> Running in 1a2f9ed3a09f
[91mWARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip.
Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
[0mCollecting typing
  Downloading typing-3.7.4.1-py3-none-any.whl (25 kB)
Installing collected packages: typing
Successfully installed typing-3.7.4.1
Removing intermediate container 1a2f9ed3a09f
 ---> 3f3389af8ebd
Step 43/50 : RUN ${KERNEL_PYTHON_PREFIX}/bin/pip install --no-cache-dir .
 ---> Running in 8bd4d5337500
[91mWARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip.
Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
[0mProcessing /home/vildeeide
Building wheels for collected packages: pydcs
  Building wheel for pydcs (setup.py): started
  Building wheel for pydcs (setup.py): finished with status 'done'
  Created wheel for pydcs: filename=pydcs-0.9.8-py3-none-any.whl size=389292 sha256=696259323b78b556584911db48474355e58fdea96294457f1ecadf9621498ef1
  Stored in directory: /tmp/pip-ephem-wheel-cache-k2msffkk/wheels/18/1d/f5/bf0f14bf28d31fca5fa5248c6a13f625973319ea6d020a8d96
Successfully built pydcs
Installing collected packages: pydcs
Successfully installed pydcs-0.9.8
Removing intermediate container 8bd4d5337500
 ---> 567174662f0e
Step 44/50 : LABEL repo2docker.ref="None"
 ---> Running in 2caf1c838abc
Removing intermediate container 2caf1c838abc
 ---> 85996e5d83b3
Step 45/50 : LABEL repo2docker.repo="local"
 ---> Running in 26021173531c
Removing intermediate container 26021173531c
 ---> 5683dfb8b11f
Step 46/50 : LABEL repo2docker.version="0.11.0"
 ---> Running in d4b0d5a57211
Removing intermediate container d4b0d5a57211
 ---> afbd3f4afea0
Step 47/50 : USER ${NB_USER}
 ---> Running in cea4560767b7
Removing intermediate container cea4560767b7
 ---> dcacb72535c9
Step 48/50 : COPY /repo2docker-entrypoint /usr/local/bin/repo2docker-entrypoint
 ---> 7ce8e5225edb
Step 49/50 : ENTRYPOINT ["/usr/local/bin/repo2docker-entrypoint"]
 ---> Running in 7fd83c91eaed
Removing intermediate container 7fd83c91eaed
 ---> 082cf12fbd64
Step 50/50 : CMD ["jupyter", "notebook", "--ip", "0.0.0.0"]
 ---> Running in 24d4d09b22ac
Removing intermediate container 24d4d09b22ac
 ---> 4c5e6f59e1b6
{"aux": {"ID": "sha256:4c5e6f59e1b619bc4de7f9cb02e903df2c79420306f27d69ed43cbe6e99bcf1a"}}Successfully built 4c5e6f59e1b6
Successfully tagged r2d-test-github.com-pydcs-dcs:07d598b
