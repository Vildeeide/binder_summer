[I 200723 11:54:01 inrepo:36] Testing notebook notebook.ipynb
[I 200723 11:54:03 inrepo:45] Found kernel python3
[I 200723 11:54:05 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 114, in <module>
    main()
  File "/src/inrepo.py", line 110, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 75, in run_notebook
    nb, cwd=os.path.dirname(nb_path), kernel_name=kernel_name, timeout=600
  File "/srv/conda/envs/notebook/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.6/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
from altair import Chart
import pandas as pd

data = pd.DataFrame({
    'a': ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],
    'b': [28, 55, 43, 91, 81, 53, 19, 87, 52]
})

Chart(data).mark_bar().encode(
    x='a',
    y='b'
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/altair/vegalite/v2/api.py[0m in [0;36mto_dict[0;34m(self, *args, **kwargs)[0m
[1;32m    259[0m         [0mcopy[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    260[0m         [0moriginal_data[0m [0;34m=[0m [0mgetattr[0m[0;34m([0m[0mcopy[0m[0;34m,[0m [0;34m'data'[0m[0;34m,[0m [0mUndefined[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mcopy[0m[0;34m.[0m[0m_prepare_data[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m [0;34m[0m[0m
[1;32m    263[0m         [0;31m# We make use of two context markers:[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/altair/vegalite/v2/api.py[0m in [0;36m_prepare_data[0;34m(self)[0m
[1;32m    251[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m
[1;32m    252[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m,[0m [0mpd[0m[0;34m.[0m[0mDataFrame[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 253[0;31m             [0mself[0m[0;34m.[0m[0mdata[0m [0;34m=[0m [0mpipe[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m,[0m [0mdata_transformers[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    254[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m,[0m [0msix[0m[0;34m.[0m[0mstring_types[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    255[0m             [0mself[0m[0;34m.[0m[0mdata[0m [0;34m=[0m [0mcore[0m[0;34m.[0m[0mUrlData[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/toolz/functoolz.py[0m in [0;36mpipe[0;34m(data, *funcs)[0m
[1;32m    632[0m     """
[1;32m    633[0m     [0;32mfor[0m [0mfunc[0m [0;32min[0m [0mfuncs[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 634[0;31m         [0mdata[0m [0;34m=[0m [0mfunc[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    635[0m     [0;32mreturn[0m [0mdata[0m[0;34m[0m[0;34m[0m[0m
[1;32m    636[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/toolz/functoolz.py[0m in [0;36m__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    301[0m     [0;32mdef[0m [0m__call__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    302[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 303[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_partial[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    304[0m         [0;32mexcept[0m [0mTypeError[0m [0;32mas[0m [0mexc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    305[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m_should_curry[0m[0;34m([0m[0margs[0m[0;34m,[0m [0mkwargs[0m[0;34m,[0m [0mexc[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/altair/vegalite/data.py[0m in [0;36mdefault_data_transformer[0;34m(data)[0m
[1;32m    122[0m [0;34m@[0m[0mcurry[0m[0;34m[0m[0;34m[0m[0m
[1;32m    123[0m [0;32mdef[0m [0mdefault_data_transformer[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 124[0;31m     [0;32mreturn[0m [0mpipe[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mlimit_rows[0m[0;34m,[0m [0mto_values[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    125[0m [0;34m[0m[0m
[1;32m    126[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/toolz/functoolz.py[0m in [0;36mpipe[0;34m(data, *funcs)[0m
[1;32m    632[0m     """
[1;32m    633[0m     [0;32mfor[0m [0mfunc[0m [0;32min[0m [0mfuncs[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 634[0;31m         [0mdata[0m [0;34m=[0m [0mfunc[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    635[0m     [0;32mreturn[0m [0mdata[0m[0;34m[0m[0;34m[0m[0m
[1;32m    636[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/toolz/functoolz.py[0m in [0;36m__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    301[0m     [0;32mdef[0m [0m__call__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    302[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 303[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_partial[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    304[0m         [0;32mexcept[0m [0mTypeError[0m [0;32mas[0m [0mexc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    305[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m_should_curry[0m[0;34m([0m[0margs[0m[0;34m,[0m [0mkwargs[0m[0;34m,[0m [0mexc[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/altair/vegalite/data.py[0m in [0;36mto_values[0;34m(data)[0m
[1;32m    112[0m     [0m_check_data_type[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    113[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mpd[0m[0;34m.[0m[0mDataFrame[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 114[0;31m         [0mdata[0m [0;34m=[0m [0msanitize_dataframe[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    115[0m         [0;32mreturn[0m [0;34m{[0m[0;34m'values'[0m[0;34m:[0m [0mdata[0m[0;34m.[0m[0mto_dict[0m[0;34m([0m[0morient[0m[0;34m=[0m[0;34m'records'[0m[0;34m)[0m[0;34m}[0m[0;34m[0m[0;34m[0m[0m
[1;32m    116[0m     [0;32melif[0m [0misinstance[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mdict[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.6/site-packages/altair/utils/core.py[0m in [0;36msanitize_dataframe[0;34m(df)[0m
[1;32m     77[0m     [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mcopy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     78[0m [0;34m[0m[0m
[0;32m---> 79[0;31m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mdf[0m[0;34m.[0m[0mindex[0m[0;34m,[0m [0mpd[0m[0;34m.[0m[0mcore[0m[0;34m.[0m[0mindex[0m[0;34m.[0m[0mMultiIndex[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     80[0m         [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m'Hierarchical indices not supported'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     81[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mdf[0m[0;34m.[0m[0mcolumns[0m[0;34m,[0m [0mpd[0m[0;34m.[0m[0mcore[0m[0;34m.[0m[0mindex[0m[0;34m.[0m[0mMultiIndex[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mAttributeError[0m: module 'pandas.core' has no attribute 'index'
AttributeError: module 'pandas.core' has no attribute 'index'


Container exited with status: {'Error': None, 'StatusCode': 1}
