[I 200706 14:37:25 inrepo:35] Testing notebook Transformational Theory.ipynb
[I 200706 14:37:26 execute:404] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/src/inrepo.py", line 76, in <module>
    main()
  File "/src/inrepo.py", line 72, in main
    test_f(opts.test, opts.output_dir)
  File "/src/inrepo.py", line 38, in run_notebook
    exported = executenb(nb, cwd=os.path.dirname(nb_path))
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 737, in executenb
    return ep.preprocess(nb, resources, km=km)[0]
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 405, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/srv/conda/envs/notebook/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py", line 448, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
# example input (two pitches)
# pitchArray = [pitch1, pitch2]

pitchArray = ['C#4', 'E5']

getTranspositionAndInversion(pitchArray)

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mSubConverterException[0m                     Traceback (most recent call last)
[0;32m<ipython-input-4-0032fb8cd802>[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0mpitchArray[0m [0;34m=[0m [0;34m[[0m[0;34m'C#4'[0m[0;34m,[0m [0;34m'E5'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;34m[0m[0m
[0;32m----> 6[0;31m [0mgetTranspositionAndInversion[0m[0;34m([0m[0mpitchArray[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m<ipython-input-3-f9765d4e7798>[0m in [0;36mgetTranspositionAndInversion[0;34m(pitchArray)[0m
[1;32m     82[0m     [0mprint[0m[0;34m([0m[0mnoteArray[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m [0;34m[0m[0m
[0;32m---> 84[0;31m     [0mgetTransposition[0m[0;34m([0m[0mnoteArray[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0mnoteArray[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     85[0m     [0mgetInversion[0m[0;34m([0m[0mnoteArray[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0mnoteArray[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-3-f9765d4e7798>[0m in [0;36mgetTransposition[0;34m(prevNote, curNote)[0m
[1;32m     57[0m [0;34m[0m[0m
[1;32m     58[0m     [0;31m# output[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 59[0;31m     [0mshowStream[0m[0;34m([0m[0mprevNote[0m[0;34m,[0m [0mcurNote[0m[0;34m,[0m [0mtransStr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     60[0m [0;34m[0m[0m
[1;32m     61[0m [0;34m[0m[0m

[0;32m<ipython-input-3-f9765d4e7798>[0m in [0;36mshowStream[0;34m(prevNote, curNote, transformStr)[0m
[1;32m     43[0m     [0;31m# output[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     44[0m     [0mprint[0m[0;34m([0m[0mtransformStr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m     [0mintStream[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0;34m)[0m                     [0;31m# output of the stream (using the .show()-method)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/music21/stream/__init__.py[0m in [0;36mshow[0;34m(self, *args, **kwargs)[0m
[1;32m    255[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0misSorted[0m [0;32mis[0m [0;32mFalse[0m [0;32mand[0m [0mself[0m[0;34m.[0m[0mautoSort[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    256[0m             [0mself[0m[0;34m.[0m[0msort[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 257[0;31m         [0;32mreturn[0m [0msuper[0m[0;34m([0m[0mStream[0m[0;34m,[0m [0mself[0m[0;34m)[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    258[0m [0;34m[0m[0m
[1;32m    259[0m     [0;31m#---------------------------------------------------------------------------[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/music21/base.py[0m in [0;36mshow[0;34m(self, fmt, app, **keywords)[0m
[1;32m   2627[0m                                  [0mapp[0m[0;34m=[0m[0mapp[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2628[0m                                  [0msubformats[0m[0;34m=[0m[0msubformats[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2629[0;31m                                  **keywords)
[0m[1;32m   2630[0m [0;34m[0m[0m
[1;32m   2631[0m     [0;31m#--------------------------------------------------------------------------[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/music21/converter/subConverters.py[0m in [0;36mshow[0;34m(self, obj, fmt, app, subformats, **keywords)[0m
[1;32m    351[0m             [0;32mfor[0m [0ms[0m [0;32min[0m [0mscores[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    352[0m                 fp = helperSubConverter.write(s, helperFormat,
[0;32m--> 353[0;31m                                               subformats=helperSubformats, **keywords)
[0m[1;32m    354[0m [0;34m[0m[0m
[1;32m    355[0m                 [0;32mif[0m [0mhelperSubformats[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m==[0m [0;34m'png'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/music21/converter/subConverters.py[0m in [0;36mwrite[0;34m(self, obj, fmt, fp, subformats, **keywords)[0m
[1;32m    873[0m                 [0;32mand[0m [0;34m([0m[0;34m'png'[0m [0;32min[0m [0msubformats[0m [0;32mor[0m [0;34m'pdf'[0m [0;32min[0m [0msubformats[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    874[0m                 and environLocal['musescoreDirectPNGPath'] != '/skip'):
[0;32m--> 875[0;31m             [0mfp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mrunThroughMusescore[0m[0;34m([0m[0mfp[0m[0;34m,[0m [0msubformats[0m[0;34m,[0m [0;34m**[0m[0mkeywords[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    876[0m [0;34m[0m[0m
[1;32m    877[0m         [0;32mreturn[0m [0mfp[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.7/site-packages/music21/converter/subConverters.py[0m in [0;36mrunThroughMusescore[0;34m(self, fp, subformats, **keywords)[0m
[1;32m    800[0m         [0;32mif[0m [0;32mnot[0m [0mmusescorePath[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    801[0m             raise SubConverterException(
[0;32m--> 802[0;31m                 [0;34m"To create PNG files directly from MusicXML you need to download MuseScore and "[0m [0;34m+[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    803[0m                 "put a link to it in your .music21rc via Environment.")
[1;32m    804[0m         [0;32melif[0m [0;32mnot[0m [0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mexists[0m[0;34m([0m[0mmusescorePath[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mSubConverterException[0m: To create PNG files directly from MusicXML you need to download MuseScore and put a link to it in your .music21rc via Environment.
SubConverterException: To create PNG files directly from MusicXML you need to download MuseScore and put a link to it in your .music21rc via Environment.


Container exited with status: {'Error': None, 'StatusCode': 1}
